<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zc.provider.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.zc.provider.pojo.Student">
    <id column="s_id" jdbcType="INTEGER" property="sId" />
    <result column="s_name" jdbcType="VARCHAR" property="sName" />
    <result column="class_id" jdbcType="INTEGER" property="classId" />
  </resultMap>
  <sql id="Base_Column_List">
    s_id, s_name, class_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where s_id = #{sId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where s_id = #{sId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zc.provider.pojo.Student">
    insert into student (s_id, s_name, class_id
      )
    values (#{sId,jdbcType=INTEGER}, #{sName,jdbcType=VARCHAR}, #{classId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zc.provider.pojo.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sId != null">
        s_id,
      </if>
      <if test="sName != null">
        s_name,
      </if>
      <if test="classId != null">
        class_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sId != null">
        #{sId,jdbcType=INTEGER},
      </if>
      <if test="sName != null">
        #{sName,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zc.provider.pojo.Student">
    update student
    <set>
      <if test="sName != null">
        s_name = #{sName,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=INTEGER},
      </if>
    </set>
    where s_id = #{sId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zc.provider.pojo.Student">
    update student
    set s_name = #{sName,jdbcType=VARCHAR},
      class_id = #{classId,jdbcType=INTEGER}
    where s_id = #{sId,jdbcType=INTEGER}
  </update>
    <!--
            根据班级id查询班级信息(带老师的信息)
            ##1. 联表查询
            SELECT * FROM class c,teacher t WHERE c.teacher_id=t.t_id AND c.c_id=1;

            ##2. 执行两次查询
            SELECT * FROM class WHERE c_id=1;  //teacher_id=1
            SELECT * FROM teacher WHERE t_id=1;//使用上面得到的teacher_id
         -->
    <select id="getClassTeacher" parameterType="java.lang.Long" resultMap="ClassResultMap">
      select  * FROM class c,teacher t WHERE c.teacher_id=t.t_id AND c.c_id=#{id};
  </select>
    <resultMap id="ClassResultMap" type="com.zc.provider.pojo.Class">
        <id column="c_id" property="cId" />
        <result column="c_name" property="cName" />
        <association javaType="com.zc.provider.pojo.Teacher" property="teacher">
            <id column="t_id" property="tId" />
            <result column="t_name" property="tName" />
        </association>
    </resultMap>
    <!--方拾贰
          SELECT * FROM class WHERE c_id=1;
          SELECT * FROM teacher WHERE t_id=1   //1 是上一个查询得到的teacher_id的值
     -->
    <select id="getClass2" parameterType="int" resultMap="ClassResultMap2">
    SELECT * FROM class WHERE c_id=#{id};
  </select>
    <resultMap id="ClassResultMap2" type="com.zc.provider.pojo.Class">
        <id column="c_id" property="cId" />
        <result column="c_name" property="cName" />
        <association column="t_id" property="teacher" select="getTeacher">
        </association>
    </resultMap>
    <select id="getTeacher" parameterType="int" resultType="com.zc.provider.pojo.Teacher">
      SELECT * FROM teacher WHERE t_id=#{id};
  </select>
    <!--
            根据classId查询对应的班级信息,包括学生,老师
         -->
    <!--
    方式一: 嵌套结果: 使用嵌套结果映射来处理重复的联合结果的子集
    SELECT * FROM class c, teacher t,student s WHERE c.teacher_id=t.t_id AND c.C_id=s.class_id AND  c.c_id=1
     -->
    <select id="getAllInfo" parameterType="int" resultMap="allInfoMap">
         SELECT * FROM class c, teacher t,student s WHERE c.teacher_id=t.t_id AND c.C_id=s.class_id AND  c.c_id=#{id};
    </select>
    <resultMap id="allInfoMap" type="com.zc.provider.pojo.Class">
        <id column="c_id" property="cId" />
        <result column="c_name" property="cName" />
        <association javaType="com.zc.provider.pojo.Teacher" property="teacher">
            <id column="t_id" property="tId" />
            <result column="t_name" property="tName" />
        </association>
        <collection ofType="com.zc.provider.pojo.Student" property="students">
            <id column="s_id" property="sId" />
            <result column="s_name" property="sName" />
        </collection>
    </resultMap>
    <!--
            方式二：嵌套查询：通过执行另外一个SQL映射语句来返回预期的复杂类型
                SELECT * FROM class WHERE c_id=1;
                SELECT * FROM teacher WHERE t_id=1   //1 是上一个查询得到的teacher_id的值
                SELECT * FROM student WHERE class_id=1  //1是第一个查询得到的c_id字段的值
     -->
    <select id="getClass4" parameterType="int" resultMap="ClassResultMap4">
        select * from class where c_id=#{id}
     </select>
    <resultMap id="ClassResultMap4" type="com.zc.provider.pojo.Class">
        <id column="c_id" property="id" />
        <result column="c_name" property="name" />
        <association column="t_id" javaType="com.zc.provider.pojo.Teacher" property="teacher" select="getTeacher2" />
        <collection column="c_id" ofType="com.zc.provider.pojo.Student" property="students" select="getStudent" />
    </resultMap>

    <select id="getTeacher2" parameterType="int" resultType="com.zc.provider.pojo.Teacher">
        SELECT t_id id, t_name name FROM teacher WHERE t_id=#{id}
     </select>

    <select id="getStudent" parameterType="int" resultType="com.zc.provider.pojo.Student">
        SELECT s_id id, s_name name FROM student WHERE clgetAllStudentsass_id=#{id}
     </select>
    <select id="getAllStudents" resultMap="seeShare">
        select * from student
    </select>
    <resultMap id="seeShare" type="com.zc.provider.pojo.Student">
        <id column="s_id" property="sId" />
        <result column="s_name" property="sName" />
        <result column="class_id" property="classId" />
    </resultMap>
</mapper>